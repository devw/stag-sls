service: stag

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  profile: stagUser
  region: eu-west-3
  environment: 
    tableName: ${self:custom.tableName}  
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:*
      Resource: '*'

plugins:
  - serverless-s3-sync
  - serverless-webpack

package:
  individually: true

custom:
  tableName: player-points
  s3Sync:
    - bucketName: stag-2020
      localDir: themes

functions:
  getUser:
    handler: lambdas/endpoints/getUser.handler
    events: 
      - http:
          path: get-users/{ID}
          method: GET
          cors: true 
  getPlayerScore:
    handler: lambdas/endpoints/getPlayerScore.handler
    events: 
      - http:
          path: get-player-score/{ID}
          method: GET
          cors: true 



resources:
  Resources:
    DemoBucketUpload:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: stag-2020
    DemoDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

